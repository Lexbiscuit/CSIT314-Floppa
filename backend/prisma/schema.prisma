// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Bids {
  bidId      Int     @id @default(autoincrement())
  accountId  Int
  workslotId Int
  status     String
  reason     String?

  accounts  Accounts  @relation(fields: [accountId], references: [accountId])
  workslots Workslots @relation(fields: [workslotId], references: [workslotId])

  @@map("Bids")
}

model Accounts {
  accountId Int      @id @default(autoincrement())
  profileId Int
  name      String
  email     String   @unique
  password  String
  dob       DateTime
  roleId    Int?
  suspended Boolean  @default(false)

  profiles Profiles @relation(fields: [profileId], references: [profileId])
  bids     Bids[]
  roles    Roles?   @relation(fields: [roleId], references: [roleId])

  @@map("Accounts")
}

model Profiles {
  profileId   Int     @id @default(autoincrement())
  name        String  @unique
  description String
  suspended   Boolean @default(false)

  accounts Accounts[]

  @@map("Profiles")
}

model Workslots {
  workslotId Int      @id @default(autoincrement())
  startTime  DateTime
  endTime    DateTime

  bids            Bids[]
  workslots_roles Workslots_Roles[]

  @@map("Workslots")
}

model Workslots_Roles {
  workslotRoleId Int @id @default(autoincrement())
  workslotId     Int
  roleId         Int
  count          Int

  workslots Workslots @relation(fields: [workslotId], references: [workslotId])
  roles     Roles     @relation(fields: [roleId], references: [roleId])

  @@map("Workslots_Roles")
}

model Roles {
  roleId Int    @id @default(autoincrement())
  name   String

  workslots_roles Workslots_Roles[]
  accounts        Accounts[]

  @@map("Roles")
}
